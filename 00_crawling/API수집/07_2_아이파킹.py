import random
import time
import bs4
import requests
import codecs
from datetime import datetime
import traceback
import os, sys

# region = {'서울':13, '부산':14, '대구':61, '인천':70, '광주':81,'대전':87, '울산':93, '세종':99, '강원도':100,'경기도':119,'경상남도':164,'경상북도':188,'전라남도':189,'전라북도':190,'제주':191,'충처남도':192,'충청북도':193}
region = [13, 14, 61, 70, 81, 87, 93, 99, 100,119,164,188,189,190,191,192,193] # 지역 parameter
vehicles = [1,2,3,4,5] #차량 종류  parameter

today = str(datetime.today()).split(' ')[0].replace('-', '')
if os.path.exists('수집결과\\07_2_아이파킹\\') == False : os.makedirs('수집결과\\07_2_아이파킹\\')
outfilename = '수집결과\\07_2_아이파킹\\아이파킹_{}.txt'.format(today)
outfilename_true = '수집결과\\07_2_아이파킹\\아이파킹_{}.log_성공.txt'.format(today)
outfilename_false = '수집결과\\07_2_아이파킹\\아이파킹_{}.log_실패.txt'.format(today)

def main():
    try:
        Crawl_run()
        outfile = codecs.open(outfilename_true, 'w', 'utf-8')
        write_text = str(datetime.today()) + '|' + '정상 수집 완료'
        outfile.write(write_text)
        outfile.close()
    except:
        if os.path.isfile(outfilename_true):
            os.remove(outfilename_true)
        outfile = codecs.open(outfilename_false, 'w', 'utf-8')
        write_text = str(datetime.today()) + '|' + '수집 실패' + '|' + str(traceback.format_exc())
        outfile.write(write_text)
        outfile.close()

def Crawl_run():
    outfile = codecs.open(outfilename, 'w', 'utf-8')
    outfile.write("NAME|XCORD|YCORD|TIME\n")
    sidolist = region
    vehiclelist = vehicles

    for sido in sidolist:
        for vehicle in vehiclelist:
            page = 1
            while True:
                result = getStoreInfo(page, sido, vehicle)
                print(page, sido , vehicle, len(result))
                if len(getStoreInfo(page, sido, vehicle)) < 10:
                    for results in result:
                        outfile.write(u'%s|' % results['name'])
                        outfile.write(u'%s|' % results['xcord'])
                        outfile.write(u'%s|' % results['ycord'])
                        outfile.write(u'%s\n' % results['time'])
                    break
                else:
                    for results in result:
                        outfile.write(u'%s|' % results['name'])
                        outfile.write(u'%s|' % results['xcord'])
                        outfile.write(u'%s|' % results['ycord'])
                        outfile.write(u'%s\n' % results['time'])
                page+=1
                time.sleep(random.uniform(1, 1.5))
    outfile.close()

def getStoreInfo(intPageNo, sido, vehicle):
    url = 'https://iparking.co.kr/web/fdk/rpms/parkingproduct/parkingProductSalesListDataWug.do?tms=2&tms_upp=1&tms_low=0&lms=0&auth=0'
    header = {
        'accept': 'text/html, */*; q=0.01',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'ko,en;q=0.9,ko-KR;q=0.8',
        'cache-control': 'no-cache',
        'content-length': '14636',
        'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
        'cookie': '_ga=GA1.3.1592745751.1638518828; _gid=GA1.3.1213960525.1638748343; AWSALB=qG7oJAB8H6Y2JIUvExtIAh6jcrHFOTtL1MbwpuURJUI0L3ZXzvHf4wXdtSFEXcR1XIOBRRcmkup2cIkDuDLAYlTOVXjhTPgEtRHLCIAb2kVE2wTt43ITsSCzF4vd; AWSALBCORS=qG7oJAB8H6Y2JIUvExtIAh6jcrHFOTtL1MbwpuURJUI0L3ZXzvHf4wXdtSFEXcR1XIOBRRcmkup2cIkDuDLAYlTOVXjhTPgEtRHLCIAb2kVE2wTt43ITsSCzF4vd; .iparking.co.kr=F4D3EEB4751362FA7E1302FB7BD7ACC6.iparking_api_8092',
        'origin': 'https://iparking.co.kr',
        'pragma': 'no-cache',
        'referer': 'https://iparking.co.kr/web/fdk/rpms/parkingproduct/parkingProductSalesListWug.do?tms=2&tms_upp=1&tms_low=0&lms=0&auth=0',
        'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="96", "Google Chrome";v="96"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"Windows"',
        'sec-fetch-dest': 'empty',
        'sec-fetch-mode': 'cors',
        'sec-fetch-site': 'same-origin',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36',
        'x-requested-with': 'XMLHttpRequest',
    }
    data = {
        # 'parkingbizItem.thisPage': '2',
        'parkingbizItem.onPaging': 'true',
        'parkingbizItem.park_seq': '',
        'parkingbizItem.dest_latitude': '',
        'parkingbizItem.dest_longitude': '',
        'parkingbizItem.search_distance': '1',
        'parkingbizItem.search_order': '',
        'parkingbizItem.prdt_seq': '',
        'parkingbizItem.southwestLat': '37.50819761238649',
        'parkingbizItem.northeastLat': '37.533386871177925',
        'parkingbizItem.southwestLon': '127.01002083604135',
        'parkingbizItem.northeastLon': '127.09628214117578',
        # 'parkingbizItem.markerIds': 'PARK_1354,PARK_2788,PARK_1692,PARK_2046,PARK_1813,PARK_3151,PARK_3620,PARK_949,PARK_3829,PARK_4786,PARK_4761,PARK_5050,PARK_2141,PARK_3867,PARK_2174,PARK_1592,PARK_1712,PARK_1554,PARK_4002,PARK_3101,PARK_1474,PARK_1869,PARK_5117,PARK_4915,PARK_749,PARK_2849,PARK_4565,PARK_1928,PARK_2478,PARK_1492,PAGL_16168,PAGL_16171,PAGL_16170,PAGL_503,PAGL_7071,PAGL_16095,PAGL_7065,PAGL_7072,PAGL_16357,PAGL_28471,PAGL_16092,PAGL_640,PAGL_7539,PAGL_6982,PAGL_17870,PAGL_10167,PAGL_6974,PAGL_10174,PAGL_27729,PAGL_333,PAGL_16370,PAGL_16281,PAGL_10200,PAGL_16363,PAGL_16262,PAGL_6989,PAGL_7078,PAGL_7073,PAGL_16091,PAGL_159,PAGL_16589,PAGL_28475,PAGL_16600,PAGL_13576,PAGL_6986,PAGL_15981,PAGL_16135,PAGL_16613,PAGL_173,PAGL_16263,PAGL_16635,PAGL_15372,PAGL_7542,PAGL_16167,PAGL_7537,PAGL_7012,PAGL_6942,PAGL_16632,PAGL_7062,PAGL_7064,PAGL_16328,PAGL_8341,PAGL_16122,PAGL_308,PAGL_16368,PAGL_411,PAGL_6995,PAGL_16507,PAGL_16631,PAGL_10173,PAGL_10170,PAGL_16172,PAGL_6991,PAGL_16002,PAGL_9494,PAGL_16127,PAGL_16110,PAGL_6935,PAGL_305,PAGL_16440,PAGL_27814,PAGL_7077,PAGL_16625,PAGL_6971,PAGL_6943,PAGL_13029,PAGL_6994,PAGL_28150,PAGL_9492,PAGL_25097,PAGL_16369,PAGL_10172,PAGL_16362,PAGL_7063,PAGL_6985,PAGL_28126,PAGL_16008,PAGL_6970,PAGL_10168,PAGL_16161,PAGL_13573,PAGL_282,PAGL_16329,PAGL_16630,PAGL_16009,PAGL_28234,PAGL_27444,PAGL_16108,PAGL_16503,PAGL_7060,PAGL_7061,PAGL_443,PAGL_7024,PAGL_7019,PAGL_478,PAGL_16006,PAGL_16624,PAGL_15931,PAGL_15284,PAGL_6993,PAGL_7027,PAGL_16602,PAGL_27983,PAGL_7036,PAGL_15998,PAGL_28236,PAGL_25110,PAGL_15934,PAGL_7543,PAGL_144,PAGL_7023,PAGL_27387,PAGL_16501,PAGL_7025,PAGL_7026,PAGL_7022,PAGL_16105,PAGL_7021,PAGL_73,PAGL_16415,PAGL_16420,PAGL_16107,PAGL_6999,PAGL_16005,PAGL_610,PAGL_16104,PAGL_27440,PAGL_28453,PAGL_16425,PAGL_6998,PAGL_642,PAGL_10169,PAGL_6997,PAGL_7037,PAGL_7050,PAGL_27449,PAGL_16267,PAGL_7038,PAGL_6983,PAGL_27442,PAGL_7051,PAGL_6965,PAGL_10171,PAGL_352,PAGL_344,PAGL_6996,PAGL_6964,PAGL_666,PAGL_10742,PAGL_7075,PAGL_7032,PAGL_14,PAGL_7049,PAGL_283,PAGL_662,PAGL_665,PAGL_28375,PAGL_7540,PAGL_158,PAGL_6963,PAGL_16272,PAGL_6924,PAGL_13167,PAGL_6961,PAGL_7000,PAGL_7138,PAGL_7031,PAGL_7030,PAGL_16423,PAGL_15793,PAGL_28452,PAGL_30017,PAGL_275,PAGL_6962,PAGL_15147,PAGL_7285,PAGL_13005,PAGL_6925,PAGL_16137,PAGL_19193,PAGL_16260,PAGL_15995,PAGL_16004,PAGL_29996,PAGL_388,PAGL_13020,PAGL_526,PAGL_7048,PAGL_6977,PAGL_7132,PAGL_7137,PAGL_16426,PAGL_7139,PAGL_7135,PAGL_19,PAGL_7239,PAGL_12,PAGL_7134,PAGL_10164,PAGL_20,PAGL_16897,PAGL_7209,PAGL_29475,PAGL_7208,PAGL_748,PAGL_29247,PAGL_15961,PAGL_7136,PAGL_7255,PAGL_455,PAGL_7236,PAGL_26,PAGL_11406,PAGL_7212,PAGL_7235,PAGL_7207,PAGL_29999,PAGL_7205,PAGL_7129,PAGL_7204,PAGL_7299,PAGL_29474,PAGL_7131,PAGL_7130,PAGL_24,PAGL_499,PAGL_7298,PAGL_13253,PAGL_10162,PAGL_27,PAGL_7301,PAGL_21,PAGL_29501,PAGL_15644,PAGL_7296,PAGL_10166,PAGL_7232,PAGL_15491,PAGL_11411,PAGL_7165,PAGL_7570,PAGL_7319,PAGL_15726,PAGL_11444,PAGL_15645,PAGL_15492,PAGL_7327,PAGL_7308,PAGL_311,PAGL_13252,PAGL_7316,PAGL_7295,PAGL_29500,PAGL_7300,PAGL_7164,PAGL_7211,PAGL_7294,PAGL_7281,PAGL_7302,PAGL_15371,PAGL_7163,PAGL_29044,PAGL_568,PAGL_7161,PAGL_279,PAGL_7162,PAGL_7154,PAGL_29186,PAGL_7352,PAGL_7317,PAGL_16894,PAGL_29170,PAGL_7307,PAGL_27422,PAGL_357,PAGL_27930,PAGL_7279,PAGL_7254,PAGL_10787,PAGL_7278,PAGL_29498,PAGL_7277,PAGL_7351,PAGL_7126,PAGL_7328,PAGL_7284,PAGL_11378,PAGL_7306,PAGL_10754,PAGL_15774,PAGL_7559,PAGL_7192,PAGL_749,PAGL_7144,PAGL_7153,PAGL_7283,PAGL_7320,PAGL_10163,PAGL_745,PAGL_7218,PAGL_7118,PAGL_7219,PAGL_29823,PAGL_27874,PAGL_7152,PAGL_7568,PAGL_7253,PAGL_7117,PAGL_13251,PAGL_11409,PAGL_7315,PAGL_7168,PAGL_7119,PAGL_7282,PAGL_15635,PAGL_7304,PAGL_644,PAGL_27807,PAGL_7252,PAGL_7116,PAGL_10753,PAGL_7305,PAGL_11450,PAGL_7250,PAGL_7313,PAGL_7151,PAGL_27784,PAGL_9499,PAGL_10783,PAGL_7216,PAGL_7350,PAGL_15642,PAGL_506,PAGL_29824,PAGL_7155,PAGL_7303,PAGL_19242,PAGL_7215,PAGL_7214,PAGL_7553,PAGL_7274,PAGL_7150,PAGL_528,PAGL_7115,PAGL_7249,PAGL_7276,PAGL_7268,PAGL_28931,PARK_1291,PARK_2768,PARK_3377,PARK_4925,PARK_2587,PARK_3635,PARK_3183,PARK_3153,PARK_3767,PARK_1604,PARK_2462,PARK_5092,PARK_4944,PARK_1001,PARK_1124,PARK_1160,PARK_2994,PARK_879,PARK_1778,PARK_3420,PARK_915,PARK_2311,PARK_4957,PARK_2123,PARK_4372,PARK_1262,PARK_1079,PARK_3588,PARK_3109,PARK_3568,PARK_2257,PARK_1148,PARK_1820,PARK_4083,PARK_1748,PAGL_7908,PAGL_514,PAGL_6940,PAGL_28381,PAGL_15958,PAGL_17969,PAGL_16557,PAGL_16302,PAGL_7694,PAGL_16052,PAGL_16392,PAGL_16399,PAGL_16397,PAGL_7907,PAGL_7011,PAGL_7044,PAGL_6927,PAGL_6936,PAGL_7693,PAGL_7102,PAGL_7986,PAGL_7010,PAGL_7608,PAGL_16387,PAGL_16385,PAGL_15878,PAGL_10738,PAGL_165,PAGL_15876,PAGL_11410,PAGL_16303,PAGL_7692,PAGL_15871,PAGL_15869,PAGL_29490,PAGL_6954,PAGL_28699,PAGL_28135,PAGL_15943,PAGL_26263,PAGL_29491,PAGL_6953,PAGL_6941,PAGL_29492,PAGL_7893,PAGL_7009,PAGL_27547,PAGL_27548,PAGL_8237,PAGL_529,PAGL_6952,PAGL_15921,PAGL_16476,PAGL_653,PAGL_15920,PAGL_6931,PAGL_168,PAGL_237,PAGL_16641,PAGL_7105,PAGL_28389,PAGL_6932,PAGL_6951,PAGL_13255,PAGL_6937,PAGL_7041,PAGL_652,PAGL_7008,PAGL_7889,PAGL_16190,PAGL_7107,PAGL_7104,PAGL_7101,PAGL_7099,PAGL_6959,PAGL_29822,PAGL_6950,PAGL_7058,PAGL_7043,PAGL_236,PAGL_7100,PAGL_16277,PAGL_29819,PAGL_8580,PAGL_8203,PAGL_27361,PAGL_27831,PAGL_6958,PAGL_7013,PAGL_29820,PAGL_16191,PAGL_6955,PAGL_7106,PAGL_10184,PAGL_28009,PAGL_16193,PAGL_7017,PAGL_10731,PAGL_10185,PAGL_6980,PAGL_29817,PAGL_6934,PAGL_6947,PAGL_29818,PAGL_7535,PAGL_13216,PAGL_7088,PAGL_7534,PAGL_651,PAGL_7056,PAGL_6979,PAGL_16304,PAGL_8170,PAGL_11458,PAGL_15979,PAGL_7059,PAGL_16640,PAGL_7042,PAGL_25132,PAGL_8159,PAGL_27994,PAGL_15984,PAGL_11455,PAGL_6926,PAGL_11459,PAGL_15983,PAGL_8171,PAGL_7082,PAGL_6956,PAGL_95,PAGL_421,PAGL_7086,PAGL_7085,PAGL_7055,PAGL_12994,PAGL_7066,PAGL_16367,PAGL_8172,PAGL_29643,PAGL_28256,PAGL_29644,PAGL_16181,PAGL_16300,PAGL_27763,PAGL_7083,PAGL_16496,PAGL_16599,PAGL_12996,PAGL_11457,PAGL_16485,PAGL_16580,PAGL_27857,PAGL_6945,PAGL_29646,PAGL_16579,PAGL_8556,PAGL_15978,PAGL_7084,PAGL_16417,PAGL_11456,PAGL_29645,PAGL_15879,PAGL_16643,PAGL_13024,PAGL_16647,PAGL_16603,PAGL_6976,PAGL_7087,PAGL_7069,PAGL_16115,PAGL_16581,PAGL_16261,PAGL_7081,PAGL_16356,PAGL_13236,PAGL_10751,PAGL_16164,PAGL_15883,PAGL_7004,PAGL_18837,PAGL_28031,PAGL_8167,PAGL_27488,PAGL_26742,PAGL_27570,PAGL_26741,PAGL_16163,PAGL_18774,PAGL_27472,PAGL_8173,PAGL_7003,PAGL_27727,PAGL_6939,PAGL_16593,PAGL_7002,PAGL_6930,PAGL_15924,PAGL_16162,PAGL_16178,PAGL_28152,PAGL_8204,PAGL_81,PAGL_10297,PAGL_7546,PAGL_15385,PAGL_15938,PAGL_7548,PAGL_15928,PAGL_7096,PAGL_15927,PAGL_16138,PAGL_7337,PAGL_7045,PAGL_7046,PAGL_16141,PAGL_7547,PAGL_7095,PAGL_16145,PAGL_25113,PAGL_15925,PAGL_28079,PAGL_7110,PAGL_7094,PAGL_8187,PAGL_7091,PAGL_15622,PAGL_7092,PAGL_15362,PAGL_16816,PAGL_7090,PAGL_28109,PAGL_29,PAGL_30,PAGL_28108,PAGL_7324,PAGL_7325,PAGL_28084,PAGL_16270,PAGL_16896,PAGL_10286,PAGL_8182,PAGL_31,PAGL_7326,PAGL_8183,PAGL_8671,PAGL_635,PAGL_28,PAGL_15611,PAGL_15723,PAGL_26285,PAGL_25093,PAGL_15608,PAGL_7323,PAGL_8670,PAGL_15646,PAGL_15722,PAGL_15647,PAGL_10791,PAGL_7322,PAGL_29746,PAGL_29662,PAGL_7321,PAGL_570,PAGL_15632,PAGL_15428,PAGL_16898,PAGL_10292,PAGL_7563,PAGL_7228,PAGL_7229,PAGL_16854,PAGL_7314,PAGL_10578,PAGL_15628,PAGL_18015,PAGL_10290,PAGL_16855,PAGL_47,PAGL_9498,PAGL_9136,PAGL_15630,PAGL_7562,PAGL_7198,PAGL_7230,PAGL_7561,PAGL_15717,PAGL_7227,PAGL_7124,PAGL_7312,PAGL_7292,PAGL_7291,PAGL_7226,PAGL_7273,PAGL_15715,PAGL_20098,PAGL_10733,PAGL_7160,PAGL_20097,PAGL_7123,PAGL_7223,PAGL_10777,PAGL_7290,PAGL_25074,PAGL_7267,PAGL_27417,PAGL_7141,PAGL_29497,PAGL_7560,PAGL_7289,PAGL_11451,PAGL_7288,PAGL_11421,PAGL_7569,PAGL_7122,PAGL_7567,PAGL_7159,PAGL_7221,PAGL_7331,PAGL_11447,PAGL_8680,PAGL_10165,PAGL_7194,PAGL_28363,PAGL_261,PAGL_7552,PAGL_7121,PAGL_27959,PAGL_11454,PARK_3697,PARK_807,PARK_2302,PARK_2221,PARK_1410,PARK_2373,PARK_671,PARK_3312,PARK_4156,PARK_1019,PARK_1216,PARK_3522,PARK_3306,PARK_4990,PARK_1097,PARK_1024,PARK_1058,PARK_3682,PARK_669,PARK_251,PARK_2299,PARK_3140,PAGL_10051,PAGL_6898,PAGL_6906,PAGL_15353,PAGL_10397,PAGL_26972,PAGL_6768,PAGL_6886,PAGL_10106,PAGL_15374,PAGL_10388,PAGL_27216,PAGL_28411,PAGL_6815,PAGL_6816,PAGL_15382,PAGL_10110,PAGL_15351,PAGL_10503,PAGL_13193,PAGL_27381,PAGL_10390,PAGL_15354,PAGL_6809,PAGL_6769,PAGL_10385,PAGL_25493,PAGL_10387,PAGL_10903,PAGL_10389,PAGL_6903,PAGL_16892,PAGL_10391,PAGL_147,PAGL_13104,PAGL_6897,PAGL_25492,PAGL_10335,PAGL_19160,PAGL_6842,PAGL_6803,PAGL_15352,PAGL_10334,PAGL_6821,PAGL_10640,PAGL_8606,PAGL_657,PAGL_10418,PAGL_10655,PAGL_18978,PAGL_15381,PAGL_10657,PAGL_10656,PAGL_10396,PAGL_10882,PAGL_6770,PAGL_10442,PAGL_10394,PAGL_15350,PAGL_28412,PAGL_10035,PAGL_10393,PAGL_10395,PAGL_10638,PAGL_6819,PAGL_6805,PAGL_10098,PAGL_10044,PAGL_29766,PAGL_10049,PAGL_10336,PAGL_16381,PAGL_10888,PAGL_10889,PAGL_10398,PAGL_710,PAGL_10438,PAGL_10048,PAGL_29916,PAGL_6764,PAGL_6887,PAGL_29914,PAGL_10046,PAGL_512,PAGL_2713,PAGL_10874,PAGL_10088,PAGL_10042,PAGL_10333,PAGL_10628,PAGL_6795,PAGL_10033,PAGL_10878,PAGL_6796,PAGL_19132,PAGL_7549,PAGL_6762,PAGL_128,PAGL_10039,PAGL_6826,PAGL_10409,PAGL_6799,PAGL_14089,PAGL_6786,PAGL_10434,PAGL_26735,PAGL_10884,PAGL_7504,PAGL_26734,PAGL_10883,PAGL_10416,PAGL_6787,PAGL_10417,PAGL_26913,PAGL_10413,PAGL_10415,PAGL_10403,PAGL_10410,PAGL_9521,PAGL_513,PAGL_2705,PAGL_10411,PAGL_6697,PAGL_10408,PAGL_10034,PAGL_6719,PAGL_7505,PAGL_10858,PAGL_10431,PAGL_6788,PAGL_25688,PAGL_10143,PAGL_10632,PAGL_10992,PAGL_6789,PAGL_634,PAGL_25167,PAGL_15401,PAGL_16828,PARK_644,PARK_728,PARK_2464,PARK_1882,PARK_609,PARK_1401,PARK_1195,PARK_572,PARK_3180,PARK_2560,PARK_2766,PARK_1689,PARK_2243,PARK_605,PARK_2755,PARK_707,PARK_4082,PARK_2305,PARK_1072,PARK_2614,PAGL_19337,PAGL_10160,PAGL_6817,PAGL_6714,PAGL_6800,PAGL_7892,PAGL_10270,PAGL_26967,PAGL_6806,PAGL_26267,PAGL_10599,PAGL_6818,PAGL_28340,PAGL_19339,PAGL_8137,PAGL_13131,PAGL_6713,PAGL_15356,PAGL_7473,PAGL_10322,PAGL_6840,PAGL_10065,PAGL_7364,PAGL_26714,PAGL_16812,PAGL_10262,PAGL_6767,PAGL_10484,PAGL_149,PAGL_15576,PAGL_10343,PAGL_10265,PAGL_15361,PAGL_10064,PAGL_15373,PAGL_10377,PAGL_18379,PAGL_10901,PAGL_10341,PAGL_10264,PAGL_10475,PAGL_10267,PAGL_10383,PAGL_26920,PAGL_15566,PAGL_8130,PAGL_10260,PAGL_16742,PAGL_10476,PAGL_10263,PAGL_16681,PAGL_460,PAGL_29262,PAGL_10261,PAGL_28288,PAGL_8138,PAGL_10062,PAGL_15558,PAGL_10082,PAGL_709,PAGL_10342,PAGL_26968,PAGL_10362,PAGL_10368,PAGL_26542,PAGL_10321,PAGL_10479,PAGL_10320,PAGL_7456,PAGL_29604,PAGL_10268,PAGL_10392,PAGL_27089,PAGL_10258,PAGL_10259,PAGL_10255,PAGL_10257,PAGL_8143,PAGL_10269,PAGL_457,PAGL_10093,PAGL_29605,PAGL_29606,PAGL_10256,PAGL_29603,PAGL_16024,PAGL_16450,PAGL_19217,PAGL_16966,PAGL_19215,PAGL_29608,PAGL_18622,PAGL_19226,PAGL_10514,PAGL_8128,PAGL_8134,PAGL_10516,PAGL_26802,PAGL_19393,PAGL_28283,PAGL_28290,PAGL_10346,PAGL_15571,PAGL_15589,PAGL_10347,PAGL_26899,PAGL_15585,PAGL_7912,PAGL_16674,PAGL_10360,PAGL_10350,PAGL_10357,PAGL_7454,PAGL_10086,PAGL_10348,PAGL_10354,PAGL_10880,PAGL_28774,PAGL_10359,PAGL_7917,PAGL_9488,PAGL_10361,PAGL_711,PAGL_2707,PAGL_29723,PAGL_6759,PAGL_7453,PAGL_10352,PAGL_29724,PAGL_9520,PAGL_7482,PAGL_8131,PAGL_10535,PAGL_8133,PAGL_29737,PAGL_10540,PAGL_8135,PAGL_10529,PAGL_10546,PAGL_15410,PAGL_8132,PAGL_11086,PAGL_29733,PAGL_10857,PAGL_10524,PAGL_10855,PAGL_10545,PAGL_10542,PAGL_7588,PAGL_8136,PAGL_10544,PAGL_10526,PAGL_6823,PAGL_10523,PAGL_10522,PAGL_10148,PAGL_6822,PAGL_26529,PAGL_29368,PAGL_7472,PAGL_708,PAGL_28312,PAGL_10036,PAGL_6781,PAGL_10634,PAGL_6908,PAGL_28657,PAGL_6790,PAGL_6827,PAGL_16997,PAGL_10406,PAGL_6782,PAGL_10863,PAGL_10041,PAGL_10426,PAGL_11875,PAGL_26914,PAGL_6701,PAGL_6791,PAGL_7479,PAGL_7529,PAGL_10631,PAGL_10860,PAGL_6883,PAGL_26912,PAGL_10407,PAGL_7994,PAGL_10859,PAGL_6755,PAGL_10865,PAGL_10448,PAGL_7993,PAGL_112,PAGL_10404,PAGL_10450,PAGL_6712,PAGL_10433,PAGL_111,PAGL_24434,PAGL_10421,PAGL_10420,PAGL_10123,PAGL_7530,PAGL_16727,PAGL_10126,PAGL_6828,PAGL_27720,PAGL_15433,PAGL_10125,PAGL_6830,PAGL_10424,PAGL_10135,PAGL_27718,PAGL_10121,PAGL_2712,PAGL_129,PAGL_10430,PAGL_10134,PAGL_24433,PAGL_24431,PAGL_8806,PAGL_6785,PAGL_10129,PAGL_10136,PAGL_10133,PAGL_10124,PAGL_15423,PAGL_10428,PAGL_7995,PAGL_10423,PAGL_10429,PAGL_7531,PAGL_8807,PAGL_8795,PAGL_2725,PAGL_113,PAGL_10425,PAGL_8794,PAGL_296,PAGL_8789,PAGL_11050,PAGL_25100,PAGL_16259,PAGL_532,PAGL_8805,PAGL_16258,PAGL_28963,PAGL_8765,PAGL_27544,PAGL_723,PAGL_16016,PAGL_8811,PAGL_16499',
        'parkingbizItem.table_name': 'PARK',
        'parkingbizItem.searchButton': 'true',
        'parkingbizItem.search_radio': 'region',
        # 'parkingbizItem.search_category_1': '14',### si
        'parkingbizItem.search_category_2': '',
        'parkingbizItem.search_category': '13',
        'parkingbizItem.search_keyword': '',
        'parkingbizItem.search_product': '5',
        # 'parkingbizItem.search_vechicle': '1', #####vehicle option
        'parkingbizItem.listRows': '10',
    }
    data['parkingbizItem.thisPage'] = intPageNo
    data['parkingbizItem.search_category_1'] = sido
    data['parkingbizItem.search_vechicle'] = vehicle
    urlopen = requests.post(url, headers = header, data = data).text
    bsObj = bs4.BeautifulSoup(urlopen,"html.parser")
    tr = bsObj.find_all('tr')
    data = []
    for info in tr:
        try:
            name = info.find('span',{"class":"title"}).text
            cord= info.select('td')[1]['onclick']
            cord = str(cord).split(',')
            ycord = str(cord[1]).replace('"','').replace(');','').replace("'","").strip()
            xcord = str(cord[2]).replace('"','').replace(');','').replace("'","").strip()
            time = info.select('span')[2]
            time = str(time).replace('<span class="title">','').replace('</span>','')
            time = time.split('[')[0]
        except : pass
        else:
            data.append({'name':name, 'xcord':xcord,'ycord':ycord, 'time':time})
    return data

def errExit(msg):
    sys.stderr.write(msg + '\n')
    sys.exit(0)

if __name__ == '__main__':
    main()